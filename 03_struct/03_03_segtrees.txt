============================== Step 5 ==============================
Дерево отрезков

============================== Step 8 ==============================
Когда длина отрезка меньше степени двойки:
1) при поиске минимума дополняем нехватающее место +\infty
2) при поиске суммы на отрезке заполняем нулями

Массив для хранния сбалансированного бинарного дерева будет <= 4n,
где n - длина исходного массива

============================== Step 10 ==============================
Напишите программу, которая реализует дерево отрезков. В первой строке
входа даны два числа n и m (1≤n,m≤105), во второй строке — n целых
чисел, задающих начальные значения массива. Далее даны m строк вида
Set I X, где I — номер позиции, а X — новое значение, или Min L R, где
L и R — левая и правая границы отрезка. Для каждой операции Min
программа должна вывести минимальное значение на отрезке от L до
R. Позиции нумеруются от единицы до n, все значения — натуральные
числа, не превышающие 109.

Sample Input:
5 7
1 2 3 4 5
Min 1 5
Set 1 8
Min 1 5
Min 1 1
Min 1 3
Set 3 1
Min 2 4

Sample Output:
1
2
8
2
1

Memory Limit: 256 MB
Time Limit: 5 seconds

Source: segtree.py
