Задача на peer-review. Статической задачей поиска суммы/минимума на
отрезке называется случай, когда массив в процессе работы остаётся
неизменным (другими словами, запрещены запросы на изменение
элементов). (f(n),g(n))-алгоритмом для такой задачи называется
алгоритм, позволяющий по данному массиву A[1…n] произвести
предобработку за время f(n), которая позволит в дальнейшем отвечать на
запросы за время g(n). Например, алгоритм, который не производит
никакой предобработки, а просто вычисляет ответ на каждый запрос,
имеет сложность (O(1),O(n)). Предложите (O(n),O(1))-алгоритм для
статической задачи поиска суммы на отрезке.

Срок сдачи задания — до Soft дедлайна (13.10.2014 23:59 MSK)
Обратите внимание на изменения в правилах сдачи задач на peer review.

Source: rangesum.py

======================================================================

Статическую задачу поиска суммы на отрезки можно разбить на две
подзадачи сложности O(n) и O(1):

Поздачада 1. Создадим вспомогательный массив B такой, что i-ый элемент
массива B равен сумме первых i элементов массива A

# Алгоритм в псевдокоде
процедура aux_array(A[0..n]):
  N <- длина(A)
  B[0] <- 0
  current_sum <- 0
  для i от 0 до N - 1:
    current_sum <- current_sum + A[i]
    B[i + 1] <- current_sum
  вернуть B

# Алгоритм на Python
def aux_array(A):
    B = [0]
    current_sum = 0
    for i in range(len(A)):
        current_sum += A[i]
        B.append(current_sum)
    return B

Легко видеть, что эта подзадача, перебирая все элементы входного
массива А длиной N, выполняется за время O(N)

Поздачада 2. Теперь нахождение суммы на отрезке можно выполнить за
константное время: достаточно вычислить разницу между элементами
вспомогательного массива B[j + 1] и B[i]

# Алгоритм в псевдокоде
процедура range_sum(B, i, j):
  вернуть (B[j + 1] - B[i])

# Алгоритм на Python
def range_sum(B, i, j):
    return B[j + 1] - B[i]

Допущения, сделанные в алгоритме: индекс первого элемента массива равен 0,
а индекс последнего элемента массива равен $N - 1$, где N есть длина массива. 
Для начала отрезка (i) и конца отрезка (j) выполняется неравенство:
$0 \leq i \leq j < N$
